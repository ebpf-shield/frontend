/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AuthDashboardsRouteImport } from './routes/_auth/dashboards/route'
import { Route as AuthAgentsRouteImport } from './routes/_auth/agents/route'
import { Route as AuthDashboardsIndexImport } from './routes/_auth/dashboards/index'
import { Route as AuthAgentsIndexImport } from './routes/_auth/agents/index'
import { Route as AuthAgentsAgentIdImport } from './routes/_auth/agents/$agentId'
import { Route as AuthDashboardsAgentsIndexImport } from './routes/_auth/dashboards/agents/index'
import { Route as AuthAgentsProcessesProcessIdImport } from './routes/_auth/agents/processes/$processId'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardsRouteRoute = AuthDashboardsRouteImport.update({
  id: '/dashboards',
  path: '/dashboards',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthAgentsRouteRoute = AuthAgentsRouteImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthDashboardsIndexRoute = AuthDashboardsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthDashboardsRouteRoute,
} as any)

const AuthAgentsIndexRoute = AuthAgentsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthAgentsRouteRoute,
} as any)

const AuthAgentsAgentIdRoute = AuthAgentsAgentIdImport.update({
  id: '/$agentId',
  path: '/$agentId',
  getParentRoute: () => AuthAgentsRouteRoute,
} as any)

const AuthDashboardsAgentsIndexRoute = AuthDashboardsAgentsIndexImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => AuthDashboardsRouteRoute,
} as any)

const AuthAgentsProcessesProcessIdRoute =
  AuthAgentsProcessesProcessIdImport.update({
    id: '/processes/$processId',
    path: '/processes/$processId',
    getParentRoute: () => AuthAgentsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/agents': {
      id: '/_auth/agents'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AuthAgentsRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/dashboards': {
      id: '/_auth/dashboards'
      path: '/dashboards'
      fullPath: '/dashboards'
      preLoaderRoute: typeof AuthDashboardsRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_auth/agents/$agentId': {
      id: '/_auth/agents/$agentId'
      path: '/$agentId'
      fullPath: '/agents/$agentId'
      preLoaderRoute: typeof AuthAgentsAgentIdImport
      parentRoute: typeof AuthAgentsRouteImport
    }
    '/_auth/agents/': {
      id: '/_auth/agents/'
      path: '/'
      fullPath: '/agents/'
      preLoaderRoute: typeof AuthAgentsIndexImport
      parentRoute: typeof AuthAgentsRouteImport
    }
    '/_auth/dashboards/': {
      id: '/_auth/dashboards/'
      path: '/'
      fullPath: '/dashboards/'
      preLoaderRoute: typeof AuthDashboardsIndexImport
      parentRoute: typeof AuthDashboardsRouteImport
    }
    '/_auth/agents/processes/$processId': {
      id: '/_auth/agents/processes/$processId'
      path: '/processes/$processId'
      fullPath: '/agents/processes/$processId'
      preLoaderRoute: typeof AuthAgentsProcessesProcessIdImport
      parentRoute: typeof AuthAgentsRouteImport
    }
    '/_auth/dashboards/agents/': {
      id: '/_auth/dashboards/agents/'
      path: '/agents'
      fullPath: '/dashboards/agents'
      preLoaderRoute: typeof AuthDashboardsAgentsIndexImport
      parentRoute: typeof AuthDashboardsRouteImport
    }
  }
}

// Create and export the route tree

interface AuthAgentsRouteRouteChildren {
  AuthAgentsAgentIdRoute: typeof AuthAgentsAgentIdRoute
  AuthAgentsIndexRoute: typeof AuthAgentsIndexRoute
  AuthAgentsProcessesProcessIdRoute: typeof AuthAgentsProcessesProcessIdRoute
}

const AuthAgentsRouteRouteChildren: AuthAgentsRouteRouteChildren = {
  AuthAgentsAgentIdRoute: AuthAgentsAgentIdRoute,
  AuthAgentsIndexRoute: AuthAgentsIndexRoute,
  AuthAgentsProcessesProcessIdRoute: AuthAgentsProcessesProcessIdRoute,
}

const AuthAgentsRouteRouteWithChildren = AuthAgentsRouteRoute._addFileChildren(
  AuthAgentsRouteRouteChildren,
)

interface AuthDashboardsRouteRouteChildren {
  AuthDashboardsIndexRoute: typeof AuthDashboardsIndexRoute
  AuthDashboardsAgentsIndexRoute: typeof AuthDashboardsAgentsIndexRoute
}

const AuthDashboardsRouteRouteChildren: AuthDashboardsRouteRouteChildren = {
  AuthDashboardsIndexRoute: AuthDashboardsIndexRoute,
  AuthDashboardsAgentsIndexRoute: AuthDashboardsAgentsIndexRoute,
}

const AuthDashboardsRouteRouteWithChildren =
  AuthDashboardsRouteRoute._addFileChildren(AuthDashboardsRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthAgentsRouteRoute: typeof AuthAgentsRouteRouteWithChildren
  AuthDashboardsRouteRoute: typeof AuthDashboardsRouteRouteWithChildren
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthAgentsRouteRoute: AuthAgentsRouteRouteWithChildren,
  AuthDashboardsRouteRoute: AuthDashboardsRouteRouteWithChildren,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/agents': typeof AuthAgentsRouteRouteWithChildren
  '/dashboards': typeof AuthDashboardsRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/agents/$agentId': typeof AuthAgentsAgentIdRoute
  '/agents/': typeof AuthAgentsIndexRoute
  '/dashboards/': typeof AuthDashboardsIndexRoute
  '/agents/processes/$processId': typeof AuthAgentsProcessesProcessIdRoute
  '/dashboards/agents': typeof AuthDashboardsAgentsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/agents/$agentId': typeof AuthAgentsAgentIdRoute
  '/agents': typeof AuthAgentsIndexRoute
  '/dashboards': typeof AuthDashboardsIndexRoute
  '/agents/processes/$processId': typeof AuthAgentsProcessesProcessIdRoute
  '/dashboards/agents': typeof AuthDashboardsAgentsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/_auth/agents': typeof AuthAgentsRouteRouteWithChildren
  '/_auth/dashboards': typeof AuthDashboardsRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/_auth/agents/$agentId': typeof AuthAgentsAgentIdRoute
  '/_auth/agents/': typeof AuthAgentsIndexRoute
  '/_auth/dashboards/': typeof AuthDashboardsIndexRoute
  '/_auth/agents/processes/$processId': typeof AuthAgentsProcessesProcessIdRoute
  '/_auth/dashboards/agents/': typeof AuthDashboardsAgentsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/agents'
    | '/dashboards'
    | '/login'
    | '/register'
    | '/agents/$agentId'
    | '/agents/'
    | '/dashboards/'
    | '/agents/processes/$processId'
    | '/dashboards/agents'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/register'
    | '/agents/$agentId'
    | '/agents'
    | '/dashboards'
    | '/agents/processes/$processId'
    | '/dashboards/agents'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/_auth/agents'
    | '/_auth/dashboards'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/_auth/agents/$agentId'
    | '/_auth/agents/'
    | '/_auth/dashboards/'
    | '/_auth/agents/processes/$processId'
    | '/_auth/dashboards/agents/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/(auth)/login",
        "/(auth)/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/agents",
        "/_auth/dashboards"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_auth/agents": {
      "filePath": "_auth/agents/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/agents/$agentId",
        "/_auth/agents/",
        "/_auth/agents/processes/$processId"
      ]
    },
    "/_auth/dashboards": {
      "filePath": "_auth/dashboards/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/dashboards/",
        "/_auth/dashboards/agents/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/_auth/agents/$agentId": {
      "filePath": "_auth/agents/$agentId.tsx",
      "parent": "/_auth/agents"
    },
    "/_auth/agents/": {
      "filePath": "_auth/agents/index.tsx",
      "parent": "/_auth/agents"
    },
    "/_auth/dashboards/": {
      "filePath": "_auth/dashboards/index.tsx",
      "parent": "/_auth/dashboards"
    },
    "/_auth/agents/processes/$processId": {
      "filePath": "_auth/agents/processes/$processId.tsx",
      "parent": "/_auth/agents"
    },
    "/_auth/dashboards/agents/": {
      "filePath": "_auth/dashboards/agents/index.tsx",
      "parent": "/_auth/dashboards"
    }
  }
}
ROUTE_MANIFEST_END */
