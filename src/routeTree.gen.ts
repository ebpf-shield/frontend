/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as AgentsRouteImport } from './routes/agents/route'
import { Route as IndexImport } from './routes/index'
import { Route as AgentsIndexImport } from './routes/agents/index'
import { Route as AgentsAgentIdImport } from './routes/agents/$agentId'
import { Route as AgentsProccessesRouteImport } from './routes/agents/proccesses/route'
import { Route as AgentsProccessesIndexImport } from './routes/agents/proccesses/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AgentsRouteRoute = AgentsRouteImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AgentsIndexRoute = AgentsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AgentsRouteRoute,
} as any)

const AgentsAgentIdRoute = AgentsAgentIdImport.update({
  id: '/$agentId',
  path: '/$agentId',
  getParentRoute: () => AgentsRouteRoute,
} as any)

const AgentsProccessesRouteRoute = AgentsProccessesRouteImport.update({
  id: '/proccesses',
  path: '/proccesses',
  getParentRoute: () => AgentsRouteRoute,
} as any)

const AgentsProccessesIndexRoute = AgentsProccessesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AgentsProccessesRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/agents': {
      id: '/agents'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AgentsRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/agents/proccesses': {
      id: '/agents/proccesses'
      path: '/proccesses'
      fullPath: '/agents/proccesses'
      preLoaderRoute: typeof AgentsProccessesRouteImport
      parentRoute: typeof AgentsRouteImport
    }
    '/agents/$agentId': {
      id: '/agents/$agentId'
      path: '/$agentId'
      fullPath: '/agents/$agentId'
      preLoaderRoute: typeof AgentsAgentIdImport
      parentRoute: typeof AgentsRouteImport
    }
    '/agents/': {
      id: '/agents/'
      path: '/'
      fullPath: '/agents/'
      preLoaderRoute: typeof AgentsIndexImport
      parentRoute: typeof AgentsRouteImport
    }
    '/agents/proccesses/': {
      id: '/agents/proccesses/'
      path: '/'
      fullPath: '/agents/proccesses/'
      preLoaderRoute: typeof AgentsProccessesIndexImport
      parentRoute: typeof AgentsProccessesRouteImport
    }
  }
}

// Create and export the route tree

interface AgentsProccessesRouteRouteChildren {
  AgentsProccessesIndexRoute: typeof AgentsProccessesIndexRoute
}

const AgentsProccessesRouteRouteChildren: AgentsProccessesRouteRouteChildren = {
  AgentsProccessesIndexRoute: AgentsProccessesIndexRoute,
}

const AgentsProccessesRouteRouteWithChildren =
  AgentsProccessesRouteRoute._addFileChildren(
    AgentsProccessesRouteRouteChildren,
  )

interface AgentsRouteRouteChildren {
  AgentsProccessesRouteRoute: typeof AgentsProccessesRouteRouteWithChildren
  AgentsAgentIdRoute: typeof AgentsAgentIdRoute
  AgentsIndexRoute: typeof AgentsIndexRoute
}

const AgentsRouteRouteChildren: AgentsRouteRouteChildren = {
  AgentsProccessesRouteRoute: AgentsProccessesRouteRouteWithChildren,
  AgentsAgentIdRoute: AgentsAgentIdRoute,
  AgentsIndexRoute: AgentsIndexRoute,
}

const AgentsRouteRouteWithChildren = AgentsRouteRoute._addFileChildren(
  AgentsRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agents': typeof AgentsRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/agents/proccesses': typeof AgentsProccessesRouteRouteWithChildren
  '/agents/$agentId': typeof AgentsAgentIdRoute
  '/agents/': typeof AgentsIndexRoute
  '/agents/proccesses/': typeof AgentsProccessesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/agents/$agentId': typeof AgentsAgentIdRoute
  '/agents': typeof AgentsIndexRoute
  '/agents/proccesses': typeof AgentsProccessesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/agents': typeof AgentsRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/agents/proccesses': typeof AgentsProccessesRouteRouteWithChildren
  '/agents/$agentId': typeof AgentsAgentIdRoute
  '/agents/': typeof AgentsIndexRoute
  '/agents/proccesses/': typeof AgentsProccessesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agents'
    | '/about'
    | '/agents/proccesses'
    | '/agents/$agentId'
    | '/agents/'
    | '/agents/proccesses/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/agents/$agentId' | '/agents' | '/agents/proccesses'
  id:
    | '__root__'
    | '/'
    | '/agents'
    | '/about'
    | '/agents/proccesses'
    | '/agents/$agentId'
    | '/agents/'
    | '/agents/proccesses/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgentsRouteRoute: typeof AgentsRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgentsRouteRoute: AgentsRouteRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/agents",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/agents": {
      "filePath": "agents/route.tsx",
      "children": [
        "/agents/proccesses",
        "/agents/$agentId",
        "/agents/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/agents/proccesses": {
      "filePath": "agents/proccesses/route.tsx",
      "parent": "/agents",
      "children": [
        "/agents/proccesses/"
      ]
    },
    "/agents/$agentId": {
      "filePath": "agents/$agentId.tsx",
      "parent": "/agents"
    },
    "/agents/": {
      "filePath": "agents/index.tsx",
      "parent": "/agents"
    },
    "/agents/proccesses/": {
      "filePath": "agents/proccesses/index.tsx",
      "parent": "/agents/proccesses"
    }
  }
}
ROUTE_MANIFEST_END */
